# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean deploy -Dcheckstyle.skip -DskipTests'
    artifactoryResolverService: 'Artifactory V2'
    targetResolveReleaseRepo: 'demo-maven-virtual'
    targetResolveSnapshotRepo: 'demo-maven-virtual'
    artifactoryDeployService: 'Artifactory V2'
    targetDeployReleaseRepo: 'demo-maven-virtual'
    targetDeploySnapshotRepo: 'demo-maven-virtual'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    includeEnvVars: true
- task: JFrogPublishBuildInfo@1
  inputs:
    artifactoryConnection: 'Artifactory V2'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: JfrogCliV2@1
  inputs:
    jfrogPlatformConnection: 'Platform V2'
    command: 'jf rt bpr --status=Development --props="status=Development" $(Build.DefinitionName) $(Build.BuildNumber) demo-maven-dev-local'